---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-nodejs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-app
      app.kubernetes.io/name: tekton-results-api-14
  template:
    metadata:
      labels:
        app: nodejs-app
        app.kubernetes.io/name: tekton-results-api-14
    spec:
      containers:
        - name: my-nodejs
          image: docker.io/aandrienko/grpc-gateway
          args:
          - -grpc-server-endpoint
          - tekton-results-api-service.oandriie-tenant.svc.cluster.local:50051
          resources:
            requests:
              memory: "10Mi"
              cpu: "2m"
          volumeMounts:
            - mountPath: /etc/tls
              name: tls
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: tekton-results-tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: tekton-results-tls
  labels:
    app.kubernetes.io/part-of: grpc-gateway-sample
    app.kubernetes.io/version: devel
  name: grpc-gateway-sample
spec:
  ports:
  - name: grpc
    port: 50051
    protocol: TCP
    targetPort: 50051
  - name: http-3001
    port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app.kubernetes.io/name: tekton-results-api-14
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: grpc-gateway-sample
  labels:
    app.kubernetes.io/part-of: grpc-gateway-sample
  annotations:
    openshift.io/host.generated: "true"
    haproxy.router.openshift.io/hsts_header: "max-age=63072000"
spec:
  path: /
  to:
    kind: Service
    name: grpc-gateway-sample-2
    weight: 100
  port:
    # tekton-results now supports both REST and gRPC traffic on same port
    targetPort: http-3001
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: tekton-results-tls
  labels:
    app.kubernetes.io/part-of: grpc-gateway-sample
    app.kubernetes.io/version: devel
  name: grpc-gateway-sample-2
spec:
  ports:
  - name: grpc
    port: 50051
    protocol: TCP
    targetPort: 50051
  - name: http-3001
    port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app.kubernetes.io/name: tekton-results-api-14
